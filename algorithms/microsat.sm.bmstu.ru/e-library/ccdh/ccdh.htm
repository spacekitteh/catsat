<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>ONBOARD DATA HANDLING</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR>
<link content="text/css" src="main.css">
<style>
body {margin-left: 20; 
      margin-right: 20
     }
</style>
<link rel="stylesheet" href="../style.css" type="text/css" >
</HEAD>
<BODY bgColor=white>
<P>
<TABLE class="tablebox" width="100%">
  <TR>
    <TD>
	<br>
      <CENTER>
	  <H2><A NAME="#GlossTop">—одержание раздела "Ѕортовой компьютер"</A></H2></CENTER>
      <HR>
	  <H3>
	<A HREF="#GlossA">Radiation</A><br>
	<A HREF="#GlossB">Common</A><br>
	<A HREF="#GlossC">Software</A><br>
	<A HREF="#GlossD">Hardware</A><br>
	<A HREF="#GlossE">Super Visors</A><br>
	  </h3>
 <HR> 
<p>
<CENTER><H3><A NAME="GlossA">Radiation </A></H3></CENTER>
<p><a href="radiation/apres.htm">RELIABILITY PREDICTION AND IMPROVEMENT OF ELECTRONIC SYSTEMS ON-BOARD MODERN COST-EFFECTIVE MICROSATELLITES<br></a>
The Centre for Satellite Engineering Research (CSER) and Surrey Satellite Technology Limited (SSTL) working together have established themselves as pioneers in low cost small satellite technology. One of the biggest challenges of reducing the high cost of space missions is maintaining high reliability. Research undertaken at CSER has shown that there is currently no suitable method for predicting the reliability of electronic systems on-board modern cost-effective small satellites. This research also revealed that it can be very difficult to improve existing methods or develop a new methodology which could be used practically for this purpose.<br>
37 KB

<p><a href="radiation/ehrtd.htm">RADIATION TOTAL DOSE vs ALUMINUM SHIELDING <br></a>
The following analysis is a total dose versus shielding curve for Emerald, assuming an orbit of 400km at an inclination of 56 degrees. It plots total dose accumulated by silicon for a year as a function of aluminum shielding thickness. 
 
Most COTS parts fail at around 5-10krads of radiation.  So from the curve, 100mils of Al will protect most parts for a year while allowing only about 1krads of radiation to comethrough during a year.  Solar panels and honeycomb should give this amount of shielding. <br>

12 KB

<p><a href="radiation/SEU.htm">PREDICTING THE RATE AND EFFECTS OF SINGLE EVENT UPSETS ON SATELLITE APPLICATION SOFTWARE USING A MICROPROCESSOR SIMULATOR
<br></a>
The current method for predicting the observable single event upset (SEU) induced error rate in microprocessors operating in spacecraft ignore the influence of software, giving a pessimistic view of the observable SEU induced error rate at the system level by the device. To take the influence of software into consideration, the duty cycle for each register as the microprocessor executes software must be determined. Using a microprocessor simulator, a new methodology for determining the duty cycle of each register has been developed and is presented in this paper. Also, Monte Carlo type simulations have been performed to determine the nature of errors observed at system level from SEUs occurring inside a microprocessor. The algorithm is also presented here. The 8051 microprocessor and real satellite application software were used as examples in this study.<br>
46 KB

<p><a href="radiation/pisr.htm">Predicting the Influence of Software on the Reliability of Commercial off-the-shelf (COTS) Technology Microprocessors in a Space Radiation Environment
<br></a>
State-of-the-art commercial microprocessors are attractive for use in cost effective space missions because, they are readily available, they are of high packaging density, cheap and capable of supporting extensive software. However, because they are not radiation hardened, they are susceptible to single event upset (SEU) caused by ionising radiation. Being able to predict ,in advance, the observable SEU induced error rate in a microprocessor is therefore essential. Using the 8051 processor as an example, a new method has being developed for this purpose and is presented here.<br>
43 KB

<p><a href="radiation/sscviii4.pdf">Miniaturized Data Processing Unit for Use on Small Satellites
<br></a>High density packaging of non rad-hard commercial of the shelf (COTS) components combined with
mission specific tailored shielding, error correcting codes and latchup current breakers provides a significant
reduction in mass, volume, power and cost compared to the traditional approach using rad. hard components. A
 prototype development of a miniaturized Data Processing Unit (DPU) exhibits the potential of the approach. The
traditional approach for the ROSETTA-OSIRIS DPU is taken as reference.<br>
153 KB

<p><a href="radiation/Radiation.pdf">Test of Onboard Computer For DTUSat<br></a>
ќписание поведени€ полупроводников, используемых в бортовом компьтере, в услови€х космического излучени€:<br>This report covers the work done by the Onboard Computer group during the last 3
weeks of January 2002. The main objective of this work was to examine how the
semiconductors selected for the Onboard Computer react when they are irradiated.
This report will describe in greater detail what happened to the parts, and the software
used during tests/<br>
132 KB

<p><a href="radiation/PAPER6B.pdf">Fast Low Complexity Reed Solomon Codec for Space<br></a>
Abstract
We describe an application of the RS code to the
routine error protection of large RAM memory for
satellites in low Earth orbit. Errors are normal in this
environment - an estimated 1000 soft errors per day for
128 Mbytes of memory being typical. There is a need to
free up the CPU from most or all of the required
encoding and decoding, and use a dedicated codec. The
device is mostly transparent to the routine transfer of
data between CPU and RAM disc Our choice of codec
uses FPGA technology. The application requires
correction of a maximum of two (byte) errors per block
of 512 bytes of data. This limited number of
corrections obviates the need for standard decoding
methods. A form of direct decoding is adopted that
allows very considerable simplification of the codec
with a low internal clock rate and low physical
complexity<br>
352 KB

<p><a href="radiation/ldakers.pdf">MICROPROCESSOR TECHNOLOGY AND SINGLE EVENT UPSET SUSCEPTIBILITY<br></a>
TodayТs small satellites employ powerful
microcircuits to control virtually every
aspect of the spacecraft. While these small
devices are very capable, they are
increasingly vulnerable to heavy ion induced
Single Event Upset (SEU). Current
technology is not very susceptible to SEUs.
The evolution of microdevices is toward lower
power and higher speed while spacecraft
evolve toward smaller and lighter structures.
This combination, along with the increased
heavy ion particle fluence associated with
large solar flares, will cause tomorrowТs
microdevices to experience SEU at rates
approaching 100 upsets per device per day!
To ensure mission success, these small
satellites must consider implementing one or
more SEU mitigation techniques.<br>
99 KB
<br>
<SMALL><A HREF="#GlossTop">к оглавлению</A></SMALL>
<hr>

<CENTER><H3><A NAME="GlossB"> Common </A></H3></CENTER>
<p><a href="Common/cdh.pdf"> <b>C&D End-of-QuarterH</b>
Fall 1999Interface Documentation, Inter Subsystem Data Bus, Microchip PICMicro Microcontrollers<br></a>
Command and data handling is the heart and brain of any spacecraft. This subsystem
functions as the director of spacecraft information. The objectives of this system are:<br>
Ј to decode information sent from the ground or other spacecraft<br>
Ј to download data to the ground station<br>
Ј to perform any commands requested of the s/c<br>
Ј to execute control instructions given to it by the GPS computer for the spacecraftТs
attitude and position<br>
Ј to pass information between the various subsystems<br>
Ј to store data collected by the instruments<br>
Ј to gather health information and telemetry data<br>
73 KB

<p><a href="Common/CDH_Ap6.pdf">Command and Data Handling Requirements (revised)<br></a>
The following is the specification for the command and data handling system of the pico-satellites
for the CubeSat mission.This specification establishes the design, construction, performance, development, and test
requirements for the command and data handling system, herein referred to as C&DH.<br>
17KB

<p><a href="Common/computer-1.pdf">Command and Data Handling:Microcontrollers and Associated Components<br></a>
Outline:<br>
Х Data: Bits, bytes, words, etc.<br>
Х Microcontrollers<br>
ХInterfaces<br>
Ц Digital inputs/outputs<br>
Ц Analog to Digital (A/D)<br>
Ц Digital to Analog (D/A)<br>
Ц Serial and Parallel<br>
Ц Common protocols: RS-232, etc.<br>
Х Important System Design approaches:<br>
Ц Multiplexing (MUX) signals<br>
Ц Signal Conditioning<br>
ЦTimers<br>
Х Memory<br>
130 KB

<p><a href="Common/onbrd_comp2.pdf">Command and Data Handling: Design<br></a>
Outline:<br>
Х Driving Issues and Requirements<br>
Цmission<br>
Ц sensors and actuators<br>
Ц communications<br>
Ц radiation<br>
Х Software approaches<br>
Ц simple versus OS<br>
Ц Protocols<br>
Х Types of Architectures<br>
Х Design Approach<br>
Х References:<br>
Ц Larson and Wertz<br>
Ц Stone, Harold E.; Microcomputer Interfacing; Addison-Wesley Publishing Company; Reading, MA; 1982.<br>
Ц Blau, Mike; C&DH SW Homepage, NASA TRACE project,<br>
http://sunland.gsfc.nasa.gov/~cdhsw/trace/cdhswtop.htm, 1996.<br>
Ц Questions to mentors<br>
121 KB

<p><a href="Common/dch_pdr_pres.pdf">Data & Command Handling Team March 12, 2002<br></a>
Overview<br>
Х Introduction<br>
Ц Team organization and responsibilities<br>
Х DCH Design<br>
Ц Hardware (Microprocessor, EEPROM)<br>
Ц Power, weight, size budget<br>
Ц Diagnostics and maintenance<br>
Ц I2C, standard interface<br>
Ц System architecture for data routing<br>
Х DiscussionЕ<br>
121 KB

<p><a href="Common/depaula.pdf">The Fault Tolerant Computer System of The Brazilian Scientific Application Microsatellites<br></a>
39 KB


<p><a href="Common/Onboard Computer for DTUsat+ok.pdf">Onboard Computer for DTUsat<br></a>
The onboard computer is necessary in the satellite in order to provide services needed by the other
parts of the satellite. It is the plan to have all software loaded in the onboard computer memory and
use the processor I/O ports to give commands/retrieve information from all other parts. The
computer will be constructed on a single board that will constitute one layer of the internal of the
satellite.<br>
Interface<br>
Our idea is to make a socket on each layer that connects all layers in the satellite. This socket could
contain all I/O ports from the processor, different power lines etc. Then each group/layer would
have specific ports assigned depending on their needs. We believe this way of doing it will be easier
than designing the system with a bus. A bus would complexify the design and if one part should
hang there would be danger of this part blocking the entire system.<br>
28 KB

<p><a href="Common/onboard.pdf">ON-BOARD AUTONOMY FOR A LOW COST LUNAR MISSION<br></a>
The lunar mission is to be Surrey
Satellite Technology first step to
interplanetary travel. SSTL has designed,
built and launched twelve low cost
microsatellites into LEO, starting in
1981 with UoSAT-1. Design of the next
generation of low cost spacecraft, (250-400 Kg) is well underway, with UoSAT-12.
This spacecraft is the first in a series
of missions planned to qualify SSTLТs
minisatellite technology and to pave the
way for the low cost lunar orbiter. The
primary objective of this technology
demonstration exercise is to show that
low cost interplanetary missions are
possible and to validate the minisatellite
bus. In keeping with the low cost
approach, it is intended that the lunar
mission project cost including launch
shall not exceed $15M. This paper
discusses how we intend to meet the cost
challenge by applying our current low
cost practices augmented with
autonomy. Spacecraft autonomy will be
described specifically in relation to the
orbit determination and control sub-system.<br>
77 KB

<p><a href="Common/TeamDHS.pdf">THE TEAMSAT DATA HANDLING SYSTEM<br></a>
820 KB

<p><a href="Common/pmp.pdf">Onboard Computer for Pico Satellite<br></a>
This paper is the result of a mid-curriculum project carried out at The Technical
University of Denmark. It is about the design and construction of an onboard computer
for a student picosatellite. The paper describes how the requirements of the computer
affect the choice of components and the overall design. Furthermore, the choice of a
debug interface and the effects of space radiation are discussed.
As the construction of the onboard computer is not yet complete, the future plans of the
project are described.<br>
1299 KB

<p><a href="Common/pparry.pdf">THE SSTI LEWIS BETTER, FASTER, AND CHEAPER GUIDANCE, NAVIGATION, AND CONTROL SUBSYSTEM<br></a>
The NASA Small Spacecraft Technology
Initiative was among the first of the high
performance, low cost spacecraft programs. It
was NASAТs postulate that by leveraging U.S.
technology investments and minimizing
customer management oversight, significant
reductions in cost and schedule could be
realized, while advancing the state of the art in
spacecraft performance. Use of the latest in
sensor, processor, and structures technology
enabled the SSTI Lewis Guidance, Navigation
and Control Subsystem to significantly improve
its pointing capabilities over most lightsat
programs. The combination of vastly reduced
customer oversight, extensive subsystem
heritage from previous programs, and the
flexibility to use in-house, high reliability design
and testing practices allowed the subsystem to
complete under the original budget, and in less
than two years. Compared with other high
quality lightsats, the SSTI Lewis GNCS has
superior performance, was completed in less
time, cost less to produce, and is of equal or
higher quality.<br>
57 KB
<br>
<SMALL><A HREF="#GlossTop">к оглавлению</A></SMALL>
<HR>

<CENTER><H3><A NAME="GlossD">Hardware</A></H3></CENTER>
<p><a href="Hard/2002VolBaseTOC1.pdf">Table of Contents<br></a>
Science & Aerospace Frontiers Ц Plenary Sessions<br>
Space Missions, Systems, and Architecture<br>
21 st Century Space Science Missions<br>
281 KB

<p><a href="Hard/at91m40807.pdf">AT91 ARM Ѓ Thumb Ѓ Microcontrollers; AT91M40807
Summary<br></a>Description:
The AT91M40807 microcontroller is a member of the Atmel AT91 16/32-bit Microcontroller
family, which is based on the ARM7TDMI processor core. This processor has a
high-performance 32-bit RISC architecture with a high-density 16-bit instruction set
and very low power consumption. In addition, a large number of internally banked registers
result in very fast exception handling, making the device ideal for real-time
control applications.<br>
232 KB

<p><a href="Hard/D2_Kleyner_P.pdf">System-On-Chip Data Processing and Data Handling Spaceflight Electronics<br></a>
This paper presents a methodology and a
tool set which implements automated
generation of moderate-size blocks of
customized intellectual property (IP), thus
effectively reusing prior work and
minimizing the labor intensive, error-prone
parts of the design process. Customization
of components allows for optimization for
smaller area and lower power consumption,
which is an important factor given the
limitations of resources available in
radiation-hardened devices. The effects of
variations in HDL coding style on the
efficiency of synthesized code for various
commercial synthesis tools are also
discussed.<br>
433 KB

<p><a href="Hard/design.pdf">DESIGN OF A LOW-COST SINGLE BOARD COMPUTER SYSTEM FOR USE
IN LOW-EARTH ORBIT SMALL SATELLITE MISSIONS<br></a>
A single-board computer system
created specifically to meet the demands of a
new generation of small satellite missions is
being designed, built and tested by students
at the University of New Hampshire. The
Satellite Single-Board Computer (SSBC) is
an Intel 80C186 based system that is
qualified for explicit use in low-earth orbit
missions. The SSBC serves as a low-cost,
high-c~uality alternative to commercially
available systems which are usually very
costly and designed for much harsher space
environments. These "off-the-shelf" systems
are normally out of price range for most very
low-cost satellite projects. At the other end of
the spectrum, however, are inexpensive
commercial-quality computer boards that do
not offer any space-hardened characteristics.
These systems are typically not designed to
survive the cosmic radiation and extreme
temperature levels usually found in low-earth
orbit. The SSBC fills in the gap between these two alternatives.<br>
142 KB

<p><a href="Hard/IAF-01-U3.09.pdf">RECONFIGURABLE SINGLE-CHIP ON-BOARD COMPUTER
FOR A SMALL SATELLITE<br></a>
Small Satellite electronic components are
generally unavailable for physical upgrade or
repair after launch. Run-time Reconfigurable
(RTR) computing technology of SRAM-based
Field Programmable Gate Arrays (FPGAs) allows
to overcome this problem - application of RTR
can facilitate new hardware circuits to be
uploaded via a radio link without an interruption
of service in the FPGAs. In this project these
advances in microelectronics are used to produce
a key enabling technology for a new generation of
low-cost commercial, scientific and military small
satellites. This paper introduces a reconfigurable
single-chip on-board computer (RSC-OBC) and
proposes two schemes for its on-board
reconfiguration. Design issues related to reliable
operation of the RSC-OBC in space are
addressed.<br>
151 KB

<p><a href="Hard/Interboard_Communication+ok.pdf">Interboard Communication (DTUsat)<br></a>
This paper summarizes the interboard communication for the DTUsat satellite as defined on a
meeting of hardware groups on January 18th, 2002. It is available from the DTUsat homepage at
www.dtusat.dtu.dk<br>
88 KB

<p><a href="Hard/jigaona.pdf">A RADIATION-HARDENED, COMPUTER FOR SATELLITE APPLICATIONS</a>
John I. Gaona Jr.<br>
This paper describes high reliability radiation hardened
computers built by Sandia for application aboard Department
Of Energy
r
(DOE) Satellite programs requiring 32-bit
processing. The computers highlight a radiation hardened (1
Mrad(Si)) R3000 executing up to 10 Million Reduced
Instruction Set Instructions (RISC) Per Second (MIPS), a dual
purpose module control bus used for real-time fault and power
management which allows for extended mission operation on
as little as 1.2 watts, and a Local Area Network capable of 480
Megabits per second. The Central Processing Unit (CPU) is
the NASA Goddard R3000 nicknamed the УMongoose or
Mongoose 1Ф. The Sandia Satellite Computer (SSC) uses
RationalТs Ada compiler, debugger, operating system kernel,
and Enhanced Floating Point Emulation Library targeted at the
Mongoose.<br>
63 KB

<p><a href="Hard/jperschy.pdf">COMMAND AND DATA HANDLING PROCESSOR
</a>James A. Perschy<br>
This command and data handling processor is
designed to perform mission critical functions for the
NEAR and ACE spacecraft. For both missions the
processor formats telemetry and executes real-time,
delayed and autonomy-rule commands. For the ACE
mission the processor also performs spin stabilized
attitude control. The design is based on the Harris
RTX2010 microprocessor and the UTMC Sµmmit
MIL-STD-1553 bus controller. Fault tolerant features
added include error detection, correction and write
protection memory. Components have been selected to
minimize the possibility of charged particle induced
upset. The processorТs architecture and mechanical
design are described. The hardware and software test and
validation methods are given.<br>
502 KB

<p><a href="Hard/MAPLD02_D5.pdf">A CCSDS-Based Communication System for a Single Chip
On-Board Computer<br></a>
This paper is concerned with the implementation of a small satellite on-board computer (OBC)
on a single programmable logic chip and with the development of a software communication
system for it. The communication system is based on the CCSDS protocol, which is a standard
communication protocol in the space industry. Integration of soft intellectual property cores
forming a main subsystem of the system-on-a-chip OBC (SoC-OBC) is detailed. The structure
and functions of the developed CCSDS software package are described. Simulation results
verifying the operation of the CCSDS communication system on the SoC-OBC are presented.<br>
533 KB

<p><a href="Hard/OBC_design.pdf">OBC Hardware documentation<br></a>
This document has been prepared by group 732. It's purpose is to document the design of the hardware to the On Board Computer system (OBC)
of the Cubesat. This document contains the detailed plans on how to build
the hardware, and also algorithms for the driver software.<br>
726 KB

<p><a href="Hard/OBCblock+.pdf">OBC Block scheme<br></a>
(блок-схема)
18 KB

<p><a href="Hard/PCBGuidelines.pdf">DTUsat Guidelines for
PCB Layout and Assembly Preparations<br></a>
PCBs for DTUsat must obey the following guidelines regarding minimum
dimensions etc. Guidelines have been drawn up by Jonas Sшlvhшj, c973442
and Klaus Krogsgaard, c991365, to whom additional questions can be sub-mitted.(...<br>)
59 KB

<p><a href="Hard/survey.pdf">MICROPROCESSORS,MICROCONTROLLERS, AND SYSTEMS IN THE NEW MILLENNIUM<br></a>
Motivated by necessity, change is
inevitable. The buggy whip manufacturer
realized this on seeing a Ford Model A drive
past. Until the late 18th century, circumnavigation
of the globe was a near impossibility
without an accurate way to measure longitude.
It wasnТt until John Harrison dedicated
most of his life to developing an accurate time-piece
that the problem was solved.
Is fundamental change also a necessity for
the microprocessor? Or is there a need to
require fundamental change? Where are
microprocessors, microcontrollers, and computer
systems headed in the new millennium?(—тать€ из журнала)
84 KB

<p><a href="Hard/ts-xii-6.pdf">Spacecraft Computers on the SeaStar Satellite<br></a>
The SeaStar spacecraft requires a high performance computer system to handle its various
requirements. It must process not only the high-rate data from the Sea-viewing Wide Field-of-view
Sensor (SeaWiFS) instrument, but also the spacecraft ground interface system and the attitude
control system data. This paper will describe the spacecraft computer architecture and its
hardware. With minimum peripheral changes, the same computer can be configured to perform
the payload, or the ground interface, or the attitude control functions. Each flight computer
consists of three computer slices and a power module. There are two main flight computers on the
SeaStar satellite; the second unit is used as a back-up. To date, the satellite has not required the
service of the back-up computer.<br>
17 KB
<br>
<SMALL><A HREF="#GlossTop">к оглавлению</A></SMALL>
<HR>
<CENTER><H3><A NAME="GlossC"> Software </A></H3></CENTER>
<p><a href="Soft/011.pdf">Software Design For a Fault-Tolerant Communications Satellite<br></a>
We describe a design of fault-tolerant features for the PANSAT communications satellite, a
design which can address a wide variety of possible faults. We discuss system errors, program
errors, and data errors, each subdivided into a variety of types. We discuss Уacceptance testsФ
that can be used to detect faults, and the appropriate remediation methods for each type.<br>
57 KB

<p><a href="Soft/3weekcourse_presentation.pdf">DTUsat onboard software architecture <br></a>
146 KB

<p><a href="Soft/ssdl9703.pdf">The Design of a Highly Configurable, Reusable Operating System for
Testbed Satellites<br></a>
The intent of this paper is to discuss some of the
common elements needed for constructing a reusable,
con.gurable operating system (Section 2), the user
interface for such an O/S (Section 3) and finally how
to architect such a system (Section 4). Along the
way, the benefits and effectiveness of the system will
be discussed in greater detail; and the process required
to configure the O/S for a specific mission will be de-
scribed.
144 KB

<p><a href="Soft/DSRDD92901.pdf">Palantir-B System Software Requirements and Design Document (SRDD)<br></a>
The Palantir-B system is an on-going project that collects data from the atmosphere
and send it back to its end-users. The system consists of 2 parts Ц Flight System and the
Ground Station System. The Flight System controls sensors on a microsatellite sent to
the atmosphere by Project Aria, a research program led by the School of Engineering of
Washington University. The Flight System is also responsible for self-power
management and data transmission back to the Ground Station. The Ground Station
System allows user to request data and display them in a graphical user interface.<br>
193 KB

<p><a href="Soft/boot.pdf">Boot strapping a satellite. A midterm project at DTU<br></a>
Boot-strapping a satellite is a midtern project written at DTU. The work  was carryed out at the institute of Informatics and Mathematical Modelling (IMM). The pofessor assosiated to this project was Hans Henric Lovengren (hh@imm.dtu.dk).<br>
This paper is made as a project at The Technical University of Denmark (DTU). The project is a small part of the Cubesat  project at DTU. 
The CubeSat concept is a collaborative effort between Japaneese & US Universities to build very small satellites, launch and operate them in space. This way, students can get hads-on experience in the life-cycle of a space project without the investmnt and risks assosiated with a full-scale mission.


643 KB

<p><a href="Soft/Dasia99Paper.pdf">Experiences with a COTS Real Time Operating
System for a Satellite On Board Computer<br></a>
Surrey Space Centre (SSC) micro-, mini- and
nanosatellites depend heavily on their on-board
computers for performing tasks such as attitude control,
payload support, communication and housekeeping.
Recent improvements in the resolution of imaging
systems and higher bandwidth communication links
have resulted in further demands on the On Board
Computers and software.
This paper describes the experience gained and lessons
learned from porting a popular Commercial Off The
Shelf (COTS) operating systems to one of SSTLs on-board
computers. The operating system described is
QNX Ѓ Real Time Operating system [1] developed by
QNX Software Systems Ltd.<br>
284 KB

<p><a href="Soft/DTU_Autonomy+.pdf">DTUsat Autonomous Monitoring and Control Preliminary Study<br></a>
This report describes a preliminary study of autonomous monitoring and control of a small
satellite.
Autonomous monitoring and control is the software that monitors and controls the satellite
while it is not in contact with the ground station. It is needed to ensure proper responses to
unexpected events and situations.
The report is part of a project to build a student satellite. The project - the DTUsat -
involves more than 50 students at the Technical University of Denmark and its goal is to let
students design and construct a small satellite. The focus of this study is the DTUsat.<br>
205 KB

<p><a href="Soft/Isabel.pdf">A CCSDS Software System for a Single-Chip On-Board Computer of a Small Satellite
Isabel Rutter, Tanya Vladimirova<br></a>
The work presented in this paper is part of a Surrey Space Centre research project that aims to reduce
the size of an on-board computer to a single chip facilitating further miniaturisation of small satellites. The
paper is concerned with a communication system, specifically designed to meet the needs of a single-chip on-board
computer - a simplified yet reliable and automated standalone alternative software implementation of the
Consultative Committee of Space Data Systems (CCSDS) protocol communicating with a standard universal
asynchronous receiver-transmitter (UART) peripheral. Details of the design and implementation stages of a
CCSDS package coded in the language C are given. A thin hardware layer is described which translates the
asynchronous UART stream into a CCSDS compliant synchronous stream. Synthesis results targeted at Actel
FPGAs are presented taking into account single event upset tolerant coding styles.<br>
241 KB

<p><a href="Soft/modules_main+.pdf">DTUsat Onboard Architecture<br></a>
This project is part of the DTUsat project, which involves more than 50
students at the Technical University of Denmark.
The satellite is based on the CubeSat concept, which has been developed by
students and professors at the American University, Stanford. The concept
is to make a small satellite in a standard form. The size of the CubeSat is
10x10x10 cm, and it has a maximum weight of 1 kg. Bundles of CubeSats
can be sent in orbit together, instead of being sent individually, resulting in
a signiљcant reduction of launch costs.<br>
The onboard software is part of the satellite platform and provides basic
services for the payload and the other subsystems on the satellite. Those
services include:Communication, Scheduling, Housekeeping, Autonomy.<br>
This report includes a detailed description of each onboard software module,
including an overview of the module design, a description of the module's
responsibilities and which commands the module handles.<br>
268 KB

<p><a href="Soft/Onboard software CDR.pdf">Onboard software (schme)<br></a>
103 KB

<p><a href="Soft/Onboard software preliminary study.pdf">On-board software<br></a>
This document describes how the software running on the onboard computer of a
satellite could be organized and which services it should provide.
Further more it is described how the different subsystems of the satellite are
represented.
The issues covered include:<br>
Basic organization and representation of subsystems<br>
Inter-process communication<br>
Storage management<br>
Prioritising of downlink communication<br>
Scheduling<br>
Collection of housekeeping data<br>
Process priorities & time critical components<br>
The proposed software model is very much inspired from the one used on the Orsted
satellite, it is very modularised and flexible approach that allows parallel development
on the different subsystems.<br>
The proposed packet format is also inspired from the one used on Ўrsted, which is a
subset of the ESA Ц Packet utilisation standard.<br>
56 KB

<p><a href="Soft/packetformat+ok.pdf">Syntax, Structure<br></a>(схема)<br>
3 KB

<p><a href="Soft/software.pdf">Documentation of AAU-Cubesat On Board Computer Software
November 8, 2002<br></a>
This document is documentation of the software written for the On Board Computer (OBC) on the AAU-cubesat.
Since the software has been written by many people organized in different groups and since the
development has been ongoing for long time there exists no single complete source of documentation of the
software. This document try to give an overview of the software by describing structure, threads, functions
and datatypes. But many things are not described in this document and must be found in the documentation
from the specific group responsible for a specific piece of software.
208 KB

<p><a href="Soft/ssci7.pdf">The Implementation of Satellite Attitude Control System Software Using
Object Oriented Design W. Mark Reid)<br></a>
This paper
describes the object-oriented design (OOD) of the SMEX-Lite Attitude Control System (ACS)
software. The SMEX-Lite ACS is three-axis controlled and is capable of performing sub-arc-minute
pointing. This paper first describes high level requirements governing the SMEX-Lite ACS
software architecture. Next, the context in which the software resides is explained. The paper
describes the principles of encapsulation, inheritance, and polymorphism with respect to the
implementation of an ACS software system. This paper will also discuss the design of several
ACS software components. Specifically, object-oriented designs are presented for sensor data
processing, attitude determination, attitude control, and failure detection. Finally, this paper will
address the establishment of the ACS Foundation Class (AFC) Library. The AFC is a large
software repository, requiring a minimal amount of code modifications to produce ACS software
for future projects.<br>
1762 KB

<p><a href="Soft/sscxi2.pdf">Using MathWorksТ Simulinkв and Real-Time Workshop Code Generator to Produce Attitude
Control Test and Flight Code
Mark Andrew Salada, Associate Staff<br></a>
This paper describes the use of a
commercial product, MathWorksТ RealTime
Workshopв (RTW), to generate actual
flight code for NASAТs Thermosphere,
Ionosphere, Mesosphere Energetics and Dynamics
(TIMED) mission. The Johns Hopkins
University Applied Physics Laboratory
is handling the design and construction of
this satellite for NASA. As TIMED is scheduled
to launch in May of the year 2000,
software development for both ground and
flight systems are well on their way. However,
based on experience from previous
APL missions such as Midcourse Space Experiment
(MSX) and the Near Earth Asteroid
Rendezvous (NEAR), the designers of
the attitude estimation and control system
desire a more streamlined approach for analysts
to incorporate their algorithms into
flight code. Specifically, the attitude control
designers want an easier and quicker iteration
capability during integration and test
that somehow includes their principle development
environment, Simulinkв. One of the
problems is that complete attitude simulations
in the Simulink models include both
flight and non-flight elements. (...)<br>
107 KB

<p><a href="Soft/sscxii7.pdf">A Fuzzy Expert System Architecture Implementing Onboard
Planning and Scheduling for Autonomous Small Satellite<br></a>
This paper presents an architecture which is
developed using rules-based Fuzzy Expert System(FES). Fuzzy expert systems not only maintains
the value of based rules and the merit of using fuzzy logic control to describe uncertainty systems,
and utilizes the predominance of using expert systems to denote and control knowledge. In order to
adapt the requirement of onboard operation, the resource restrain is considered in the architecture,
such as processing speed of CPU, the capacity of storage and the real-time requirement.
As the application of this architecture, this paper also describes an onboard automated planning
and scheduling system in the SMMS, which is a small satellite of Research Institute of Satellite
Engineering and Technology of Harbin Institute of Technology and will be launched in 2000.
48 KB

<p><a href="Soft/ssdl9703.pdf">The Design of a Highly Configurable, Reusable Operating System for
Testbed Satellites)<br></a>
144 KB

<p><a href="Soft/ts-xii-8.pdf">A Consolidated ACS Flight Software Development Approach for the Earth
Observing-1 Spacecraft
Kathie Blackman and Jeff DТAgostino<br></a>
The Earth Observing 1 (EO-1) mission is part of NASAТs New Millennium Program (NMP). The EO-1
Attitude Control System (ACS) flight software was based on the Tropical Rainfall Measuring Mission (TRMM)
flight software, both of which were developed by the Hammers Company, Inc. Lessons learned during TRMM
ACS software development led to a consolidated software development approach for the EO-1 ACS.
The approach started with a standalone system that incorporated the Уfirst-cutФ flight software into the spacecraft
simulation, allowing closed loop simulations to run on a desktop computer. Consequently, more algorithm and
coding errors were detected earlier in the development process. The consolidated system was connected directly to
a ground support equipment computer in order to develop test procedures, ground system databases, and display
pages. For flight software testing, the systemТs spacecraft simulation module was used as a spacecraft simulator,
and the flight software was removed and loaded onto the test or flight hardware.<br>
274 KB
<br>
<SMALL><A HREF="#GlossTop">к оглавлению</A></SMALL>
<HR>

<CENTER><H3><A NAME="GlossE"> Super Visors </A></H3></CENTER>
<p><a  href="SuperVisors/4181.pdf">FAULT-TOLERANT CONTROL - A CASE STUDY OF THE ORSTED SATELLITE<br></a>
The increasing operational requirements for onboard autonomy in satellite control systems necessitates
structural methods that support the design of a complete and reliable supervisory system. This paper presents
the design strategy used to develop a supervisor for the attitude control system for the Danish Ўrsted satellite.
The main topic is handling of faults arising in onboard instrumentation, ie. how to detect faults and how to
prevent propagation into failures with potential mission loss as a consequence. Formal methods are used to
ensure complete coverage of all potential fault types and to guarantee that the design criteria are met in the
final implementation.<br>
216 KB

<p><a href="SuperVisors/battin.pdf">CONTROL OF SPACECRAFT SUBJECT TO ACTUATOR FAILURES: STATE-OF-THE-ART AND
OPEN PROBLEMS<br></a>
In this paper we provide some new results for the problem of the attitude stabilization of a non-symmetric
rigid body spacecraft using two pairs of gas jet actuators. We propose both time-invariant and time-varying
discontinuous stabilizing control laws. We emphasize the problem of feasible trajectory generation for an
underactuated spacecraft and we provide a solution to this problem using ideas from the theory of differentially
flat systems. Numerical simulations accompany the theoretical developments. We also provide some
discussion on open problems in this framework. It turns out that these control problems are significant not
only because of their use in applications but also because of their challenging theoretical aspects.<br>
462 KB

<p><a href="SuperVisors/SSDL9901.pdf">Persistence-Based Production Rules for
On-Board Satellite Automation<br></a>
This paper motivates the use of persistence as an integral
aspect of automated health monitoring, introduces the concept
of an Уintegral of threatФ to replace static alarm thresholds,
describes how persistence tracking has been integrated into
Chatterbox, and reviews the applications of the resulting
system for SSDL's spacecraft.<br>
193 KB

<HR>

<p><a href="../index.html">BACK<br></a>
<p>
</P></TD></TR></TBODY></TABLE></P></BODY></HTML>
